/* Database schema to keep the structure of entire database. */

CREATE TABLE public.animals
(
  id integer NOT NULL,
  name text NOT NULL,
  date_of_birth date,
  escape_attempts integer,
  neutered boolean,
  weight_kg numeric,
  PRIMARY KEY (id)
)

-- ################################# DAY 2 ######################################

ALTER TABLE animals
ADD species VARCHAR;

-- ################################# DAY 3 ######################################

CREATE TABLE owners (
	id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	full_name varchar,
	age integer
);

CREATE TABLE species (
  id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,	
  name varchar, 
  PRIMARY KEY (id)
);

ALTER TABLE animals
ALTER COLUMN id
ADD GENERATED BY DEFAULT AS IDENTITY;

ALTER TABLE animals
DROP COLUMN species;

ALTER TABLE animals
ADD species_id integer;

ALTER TABLE animals
ADD FOREIGN KEY (species_id) REFERENCES species (id) ON DELETE CASCADE;

ALTER TABLE animals
ADD owner_id integer;

ALTER TABLE owners
ADD PRIMARY KEY (id);

ALTER TABLE animals
ADD FOREIGN KEY (owner_id) REFERENCES owners (id) ON DELETE CASCADE;

-- ################################# DAY 4 ######################################

CREATE TABLE vets (
  id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  name varchar,
  age integer,
  date_of_graduation date,
  PRIMARY KEY (id)
);

CREATE TABLE specializations (
  species_id integer,
  vet_id integer,
  CONSTRAINT fk_vets FOREIGN KEY (vet_id) REFERENCES vets(id),
  CONSTRAINT fk_species FOREIGN KEY (species_id) REFERENCES species(id)
);

CREATE TABLE visits (
  animal_id integer,
  vet_id integer,
  date_of_visit date,
  CONSTRAINT fk_animals FOREIGN KEY (animal_id) REFERENCES animals(id),
  CONSTRAINT fk_vets FOREIGN KEY (vet_id) REFERENCES vets(id)
);